# Owl Virtual Machine Boot Rom

section main; void {
    # Variable Declaration
    key = #0 ; # Used for keyboard wait

    # Display boot bootSCREEN
    do bootSCREEN;

    # Wait on a key to be pressed.
    do waitKey;

    # Display boot options
    do bootSCREENoptions;

    # Boot select options
    do bootOptions;

};

section waitKey; void {
    key = $524287 ;
    if key not #0 ; {
        key = #0 ;
        $524287 = #0
        };}
    };;
    if key = #0 ; {
        go waitKey;
    };;
};}

section bootOptions; void {
    key = $524287 ;
    if key = @1 ; {
        go $12000
    };;
    if key = @2 ; {
        key = #0 ;
        $524287 = #0
        go aboutOwl;
    };;
    if key = #0 ; {
        go bootOptions;
    };;
};}

section bootSCREEN; void {
    clear
    print Owl Virtual Machine Boot Rom
    print Copyright (c) 2022-2023
    print
    print Press any key to continue...
};}

section bootSCREENoptions; void {
    print
    print 1. Run executable(program.bin) at addr 12000
    print 2. About
};}

section debugLoop; void {
    go debugLoop;
};

section aboutOwl; void {
    clear
    print Owl Virtual Machine
    print
    print About:
    print Owl virtual machine began possibly as far back as 2020 when I began to learn more about CPUs and programming.
    print I began to experiment near late 2020 when I was bored in class on making virtual computers with python. Since that point I made countless virtual machines but each one wasn't what I wanted.
    print Each machine had issues, with either a assembler that sucked or didn't work. Along with that I didn't know how to get custom jump points for the assembler making programming in assembly hard and not fun.
    print So I continued to keep making these virtual machines over and over again until May 2022 when I finally began on the SPE, which stands for (simple processor emulator).
    print I worked on it all summer and eventually found golang to help me achieve way faster speeds when interpretting instructions. I moved the emulator back to python after that for two weeks because of key press issues.
    print After the key issues were fixed, I had a emulator, assembler, and compiler. I then continued to work on the SPE from August to November where in that time I improved countless things about the emulator, assembler, and compiler.
    print Around that time I also decided to rename the SPE to Hawk when then was changed shortly after to Owl, in memory of my cat. December brought on slow updates and no work on the project until the end of it.
    print I began work on version 1.2.0 which improved the look the emulator source code wise and made it easier to work with. Since then I have also re-written the compiler which makes it easier to code and at the same time do more.
    print 
    print So basically Owl is a virtual machine meant for learning how to program assembly and for just programming. It still is in it's early stages and will have issues with speed and software. Don't worry I'm not giving up on it
    print like my last emulators.
    print
    print Press any key to return...
    do waitKey;
    go main;
};




*endfile